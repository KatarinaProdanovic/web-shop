// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyWebApp.Data;

#nullable disable

namespace MyWebApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230421120959_AddDataInTables")]
    partial class AddDataInTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.3.23174.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyWebApp.Models.LoggedUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoggedUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Ljub123",
                            City = "Ljubovija",
                            Country = "srbija",
                            Email = "kaca@gmail.com",
                            Name = "Katarina",
                            Password = "$2a$11$jWDGVlVdTmjsMGTzr3lEMeTSi6rRDvmZtLPwx2JhSs4LWOFa1Wt6W",
                            PhoneNumber = "057758",
                            PostalCode = "123",
                            Surname = "Prodanovic"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Ljub123",
                            City = "Ljubovija",
                            Country = "srbija",
                            Email = "mica@gmail.com",
                            Name = "Milica",
                            Password = "$2a$11$hFep6heyvRgR9S6XWHVly.AO8g9Y0.BBjZ5nEiz7GlrA7EuE5uAn2",
                            PhoneNumber = "35346",
                            PostalCode = "123",
                            Surname = "Markovic"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Ljub123",
                            City = "Ljubovija",
                            Country = "srbija",
                            Email = "ana@gmail.com",
                            Name = "Ana",
                            Password = "$2a$11$U1KYz.AnLsc32lk3GOGxCuI4KrhXLg9eSdZZ8CBSJ6b89VRTkWSqe",
                            PhoneNumber = "7544",
                            PostalCode = "123",
                            Surname = "Jovanovic"
                        });
                });

            modelBuilder.Entity("MyWebApp.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("LoggedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductCode")
                        .HasColumnType("int");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LoggedUserId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderDate = new DateTime(2023, 4, 21, 14, 9, 58, 962, DateTimeKind.Local).AddTicks(6005),
                            ProductCode = 123,
                            Quantity = 2f,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("MyWebApp.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            Address = "Ljub123",
                            City = "Ljubovija",
                            Country = "srbija",
                            Email = "kaca@gmail.com",
                            Name = "Marija",
                            PhoneNumber = "057758",
                            PostalCode = "123",
                            Surname = "Prodanovic"
                        });
                });

            modelBuilder.Entity("MyWebApp.Models.Order", b =>
                {
                    b.HasOne("MyWebApp.Models.LoggedUser", "LoggedUser")
                        .WithMany()
                        .HasForeignKey("LoggedUserId");

                    b.HasOne("MyWebApp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("LoggedUser");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
