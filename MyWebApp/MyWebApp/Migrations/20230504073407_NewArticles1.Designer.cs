// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyWebApp.Data;

#nullable disable

namespace MyWebApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230504073407_NewArticles1")]
    partial class NewArticles1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.3.23174.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyWebApp.Models.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BarCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CategoryId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("Cena")
                        .HasColumnType("int");

                    b.Property<string>("KataloskaOznaka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kategorija")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NazivGrupe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Proizvodjac")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SifArtID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stanje")
                        .HasColumnType("int");

                    b.Property<int>("Tezina")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Article");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BarCode = "12212",
                            CategoryId = 1,
                            Cena = 159,
                            KataloskaOznaka = "123",
                            Kategorija = "Kategorija1",
                            NazivGrupe = "Artikal1",
                            Proizvodjac = "Neki1",
                            SifArtID = "Artikal 1",
                            Stanje = 3,
                            Tezina = 125
                        },
                        new
                        {
                            Id = 2,
                            BarCode = "45657",
                            CategoryId = 2,
                            Cena = 200,
                            KataloskaOznaka = "1234",
                            Kategorija = "Kategorija2",
                            NazivGrupe = "Artikal2",
                            Proizvodjac = "Neki2",
                            SifArtID = "Artikal 2",
                            Stanje = 3,
                            Tezina = 100
                        },
                        new
                        {
                            Id = 3,
                            BarCode = "5765756",
                            CategoryId = 2,
                            Cena = 250,
                            KataloskaOznaka = "12345",
                            Kategorija = "Kategorija2",
                            NazivGrupe = "Artikal3",
                            Proizvodjac = "Neki3",
                            SifArtID = "Artikal 3",
                            Stanje = 3,
                            Tezina = 120
                        });
                });

            modelBuilder.Entity("MyWebApp.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Kategorija1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Kategorija2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Kategorija3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Kategorija4"
                        });
                });

            modelBuilder.Entity("MyWebApp.Models.LoggedUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoggedUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Ljub123",
                            City = "Ljubovija",
                            Country = "srbija",
                            Email = "kaca@gmail.com",
                            Name = "Katarina",
                            Password = "$2a$11$EctNZrKXbHIgpDsKDcOeo.XJe/CGptQJmwHdBmi/rZq99BCoeXtPu",
                            PhoneNumber = "057758",
                            PostalCode = "123",
                            Surname = "Prodanovic"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Ljub123",
                            City = "Ljubovija",
                            Country = "srbija",
                            Email = "mica@gmail.com",
                            Name = "Milica",
                            Password = "$2a$11$OytLne85S/cBRyhs6/ga1.ZbLGNIv3KHX7oIQrbZG7vqlgqBlaVle",
                            PhoneNumber = "35346",
                            PostalCode = "123",
                            Surname = "Markovic"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Ljub123",
                            City = "Ljubovija",
                            Country = "srbija",
                            Email = "ana@gmail.com",
                            Name = "Ana",
                            Password = "$2a$11$S9hA7qein6WjSEDuPumh1OPe1VdCnzMWdlb4.s0MWd0Ob4pGIrHWq",
                            PhoneNumber = "7544",
                            PostalCode = "123",
                            Surname = "Jovanovic"
                        });
                });

            modelBuilder.Entity("MyWebApp.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("LoggedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductCode")
                        .HasColumnType("int");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LoggedUserId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderDate = new DateTime(2023, 5, 4, 9, 34, 7, 451, DateTimeKind.Local).AddTicks(2613),
                            ProductCode = 123,
                            Quantity = 2f,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("MyWebApp.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            Address = "Ljub123",
                            City = "Ljubovija",
                            Country = "srbija",
                            Email = "kaca@gmail.com",
                            Name = "Marija",
                            PhoneNumber = "057758",
                            PostalCode = "123",
                            Surname = "Prodanovic"
                        });
                });

            modelBuilder.Entity("MyWebApp.Models.Article", b =>
                {
                    b.HasOne("MyWebApp.Models.Category", "Category")
                        .WithMany("Articles")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MyWebApp.Models.Order", b =>
                {
                    b.HasOne("MyWebApp.Models.LoggedUser", "LoggedUser")
                        .WithMany()
                        .HasForeignKey("LoggedUserId");

                    b.HasOne("MyWebApp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("LoggedUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MyWebApp.Models.Category", b =>
                {
                    b.Navigation("Articles");
                });
#pragma warning restore 612, 618
        }
    }
}
